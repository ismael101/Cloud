{"version":3,"sources":["actions/fileActions.js","actions/types.js","actions/userAction.js","layout/Files.js","components/FileUpload.js","components/Files.js","actions/imageActions.js","layout/Images.js","components/ImageUpload.js","components/Image.js","components/Error.js","layout/Navigation.js","components/About.js","reducers/files.js","reducers/images.js","reducers/user.js","reducers/index.js","store.js","components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["emptyFile","dispatch","type","userLogout","a","error","Files","props","file","slice","indexOf","length","name","AOS","init","duration","Card","className","style","borderRadius","border","data-aos","Body","Row","Col","size","toFixed","toUpperCase","Date","createdAt","toDateString","ButtonGroup","Button","variant","onClick","download","_id","delete","FileUpload","useDropzone","accept","multiple","acceptedFiles","rejectedFiles","getRootProps","getInputProps","React","useState","show","setShow","uploadFiles","formData","FormData","forEach","append","upload","handleClose","reject","acceptedFilesItems","map","ListGroup","Item","key","rejectedFilesItems","Modal","onHide","centered","Header","height","fontSize","marginLeft","marginTop","Footer","File","handleDownload","id","fetch","headers","Authorization","token","res","blob","console","log","handleUpload","files","createFile","handleDelete","window","confirm","deleteFile","err","state","this","loggedIn","fetchFiles","history","push","listFiles","Navbar","bg","Brand","Toggle","Collapse","Form","inline","Title","Component","connect","user","axios","get","payload","data","post","emptyImage","Images","image","popover","Popover","as","Content","OverlayTrigger","trigger","placement","overlay","Img","src","location","minHeight","Text","ImageUpload","Image","images","createImage","deleteImage","fetchImages","listImages","xs","md","xl","Error","marginRight","Navigation","handleClick","bind","links","Nav","Link","href","username","block","pic","rounded","width","toggle","aria-controls","expand","withRouter","initialState","combineReducers","action","newFiles","filter","newImages","middleware","thunk","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","SignIn","password","onChange","onSubmit","e","setState","target","value","preventDefault","signup","userLogin","Alert","maxWidth","textAlign","Group","Control","placeholder","required","profilepic","App","configStore","loading","Container","path","exact","component","About","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38e6e079.chunk.js","sourcesContent":["import {FETCH_FILES, NEW_FILE, DELETE_FILE, EMPTY_FILE, FILE_ERROR} from './types'\nimport axios from 'axios'\n\nexport const fetchFiles = (token) =>{\n    return async dispatch => {\n        try{\n            const res = await axios.get('http://localhost:5000/files',{\n                headers:{\n                    Authorization: `Bearer ${token}`\n                }\n            })\n            dispatch({\n                type:FETCH_FILES, \n                payload:res.data.files\n            })\n        }\n        catch(error){\n            dispatch({\n                type:FILE_ERROR,\n            })\n        }} \n}\n\nexport const createFile = (token,files) => {\n    return async dispatch => {\n        try{\n            const res = await axios.post('http://localhost:5000/files',files, \n            {headers: {'Content-Type': 'multipart/form-data' , Authorization: `Bearer ${token}`}})\n            dispatch({\n                type:NEW_FILE,\n                payload: res.data.files\n            })\n        }\n        catch(error){\n            dispatch({\n                type: FILE_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n\nexport const deleteFile = (token,id) => {\n    return async dispatch => {\n        try{\n            await axios.delete(`http://localhost:5000/files/${id}`,{\n                headers:{\n                    Authorization: `Bearer ${token}`\n                }\n            })\n            dispatch({\n                type: DELETE_FILE,\n                payload: id\n            })\n        }catch(error){\n            dispatch({\n                type:FILE_ERROR,\n                payload:error\n            })\n        }\n    }\n}\n\nexport const emptyFile = () => dispatch => {\n    dispatch({\n        type: EMPTY_FILE\n    })\n}","export const FETCH_FILES = 'FETCH_FILES'\nexport const NEW_FILE = 'NEW_FILE'\nexport const DELETE_FILE = 'DELETE_FILE'\nexport const EMPTY_FILE = 'EMPTY_FILE'\nexport const FILE_ERROR = 'FILE_ERROR'\nexport const FETCH_IMAGES = 'FETCH_IMAGES'\nexport const NEW_IMAGE = 'NEW_IMAGE'\nexport const DELETE_IMAGE = 'DELETE_IMAGE'\nexport const EMPTY_IMAGE = 'EMPTY_IMAGE'\nexport const IMAGE_ERROR = 'IMAGE_ERROR'\nexport const FETCH_AUDIOS = 'FETCH_AUDIOS'\nexport const NEW_AUDIO = 'NEW_AUDIO'\nexport const DELETE_AUDIO = 'DELETE_AUDIO'\nexport const EMPTY_AUDIO = 'EMPTY_AUDIO'\nexport const AUDIO_ERROR = 'AUDIO_ERROR'\nexport const USER_LOGIN = 'USER_LOGIN'\nexport const USER_ERROR = 'USER_ERROR'\nexport const USER_LOGOUT = 'USER_LOGOUT'","import {USER_LOGIN, USER_ERROR, USER_LOGOUT} from './types'\nimport axios from 'axios';\n\nexport const userLogin = (signup) => {\n    return async dispatch => {\n        try{\n            const res = await axios.post('http://localhost:5000/users/login',signup)\n            dispatch({\n                type:USER_LOGIN,\n                payload:{username:signup.username,token:res.data.token,pic:res.data.profilepic}\n            })\n        }catch(error){\n        dispatch({\n            type:USER_ERROR,\n        })\n        }   \n    }\n}\n\nexport const userLogout = () => {\n    return async dispatch => {\n        try{\n            dispatch({\n                type:USER_LOGOUT,\n            })\n        }\n        catch(error){\n\n        }\n    }\n}","import React from 'react'\nimport {Card, Row, Col, Button, ButtonGroup} from 'react-bootstrap'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nconst Files = (props) => {\n    const type = props.file.type.slice(props.file.type.indexOf('/') + 1, props.file.type.length)\n    const name = props.file.name.slice(0, props.file.type.indexOf(type))\n    AOS.init({\n        duration:1000\n    })\n    const corners = {\n        borderRadius: '25px'\n    \n    }\n    \n    return(\n        <Card className='my-5' style={corners} border='info' data-aos=\"zoom-in\" >\n            <Card.Body>\n                <Row className='align-items-center text-center'>\n                    <Col>\n                        {name} \n                    </Col>\n                    <Col>\n                        {(props.file.size / 1000000).toFixed(2) + ' mb'}\n                    </Col>\n                    <Col>\n                        {type.toUpperCase()}\n                    </Col>\n                    <Col>\n                        {new Date(props.file.createdAt).toDateString()}\n                    </Col>\n                    <Col>\n                        <ButtonGroup>\n                            <Button variant='outline-success' onClick = {() => { props.download(props.file._id,props.file.name)}} className='text-center'><i className=\"material-icons\" >arrow_downward</i></Button>\n                            <Button variant='outline-danger' onClick = {() => {props.delete(props.file._id,props.file.name )}} ><i className=\"material-icons\">delete</i></Button>\n                        </ButtonGroup>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    )    \n}\n\nexport default Files","import React from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport {ListGroup, Modal, Button, ButtonGroup} from 'react-bootstrap'\n\nconst FileUpload = (props) => {\n    let {acceptedFiles, rejectedFiles, getRootProps, getInputProps} = useDropzone({\n        accept: `application/* , audio/* , .pdf , .docx`,\n        multiple: true\n    })\n    const [show,setShow] = React.useState(false)\n\n    const uploadFiles = async (accept) => {\n        let formData = new FormData()\n        accept.forEach(file => {\n            formData.append('files',file)\n        })\n        props.upload(formData)\n        acceptedFiles.length = 0\n        rejectedFiles.length = 0\n        setShow(false)\n\n    }\n\n    const handleShow = () => {\n        setShow(true)\n    }\n\n    const handleClose = async (accept,reject) => {\n       acceptedFiles.length = 0\n       rejectedFiles.length = 0\n        setShow(false)\n    }\n\n\n    const acceptedFilesItems = acceptedFiles.map(file => {\n        return(\n            <ListGroup.Item variant='primary' key={file.name}>\n                {file.name} Accepted\n            </ListGroup.Item>\n        )\n    })\n\n    const rejectedFilesItems = rejectedFiles.map(file => {\n        return(\n            <ListGroup.Item variant='danger' key={file.name}>\n                {file.name} Rejected\n            </ListGroup.Item>\n        )\n    })\n    const drop = {\n        height: '200px',\n        border:'4px dashed lightblue',\n        borderRadius: '25px'\n    }   \n    const corners = {  \n        borderRadius: '25px'\n    }\n    const icon = {\n        fontSize: '100px',\n        marginLeft: '175px',\n        marginTop: '45px'\n    }\n    return(\n        <div>\n        <Button variant='outline-light' style={corners} onClick={handleShow}>Upload</Button>\n        <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header>\n                <h2>Upload</h2>\n            </Modal.Header>\n            <Modal.Body>\n        <section>\n            <div>\n            <div {...getRootProps({className: 'dropzone'})} style={drop}>\n                <input {...getInputProps()} />\n                <i className=\"material-icons\" style={icon}>\n                    cloud_upload\n                    </i>\n            </div>\n            <div className='my-1'>\n                <ListGroup> \n                    {acceptedFilesItems}\n                </ListGroup>\n            </div>\n            <div>\n                <ListGroup className='my-1'>\n                    {rejectedFilesItems}\n                </ListGroup>\n            </div>\n            </div>\n        </section>\n        </Modal.Body>\n        <Modal.Footer>\n            <ButtonGroup>\n                <Button variant='primary' onClick={() => {uploadFiles(acceptedFiles,rejectedFiles)}}>Upload</Button><Button variant='danger' onClick={() => {handleClose(acceptedFiles,rejectedFiles)}}>Cancel</Button>\n            </ButtonGroup>\n        </Modal.Footer>\n        </Modal>\n        </div>\n    )\n}\n\nexport default FileUpload","import React, {Component} from 'react'\nimport {emptyFile,createFile,fetchFiles,deleteFile} from '../actions/fileActions'\nimport {userLogout} from '../actions/userAction'\nimport Files from '../layout/Files'\nimport { connect } from 'react-redux';\nimport download from 'downloadjs'\nimport FileUpload from './FileUpload'\nimport { Navbar, Row,Form, Col, Button, Modal,ButtonGroup } from 'react-bootstrap';\nclass File extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show:false,\n            setShow:false\n        }\n    }\n    componentWillMount(){\n       if(this.props.loggedIn){\n            this.props.fetchFiles(this.props.token)\n            if(this.props.error){\n                this.props.emptyFile()\n                this.props.userLogout()\n                this.props.history.push('/')\n            }\n       }\n       else{\n           this.props.history.push('/')\n       }\n    }\n  \n     handleDownload = async(id, name) => {\n         try{\n            const res = await fetch(`http://localhost:5000/files/${id}`,{\n                headers:{\n                    Authorization:`Bearer ${this.props.token}`\n                }\n            })\n            const blob = res.blob()\n            download(blob, name);\n         }\n         catch(err){\n            console.log(err)\n         }\n    }\n    \n    handleUpload = async(files) => {\n        try{\n            await this.props.createFile(this.props.token, files)\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n\n    handleDelete = async(id,name) => {\n        try{\n            let confirm = window.confirm('Do you want to delete this file: ',{name})\n            if(confirm){\n                this.props.deleteFile(this.props.token,id)\n            }\n\n        }catch(err){\n            console.log(err)\n        }  \n    }  \n    render(){\n        let listFiles = []\n        if(!this.props.error){\n            listFiles = this.props.files.map(file => {\n                return(\n                    <Files file={file} key={file._id} download={this.handleDownload} delete={this.handleDelete}></Files>\n                )\n            })\n        }      \n         \n        const corners = {\n            borderRadius: '25px'\n        }\n        \n        return(\n            <div>\n                 <Navbar bg=\"primary\" variant=\"dark\" className='my-5' style={corners}>\n                <Navbar.Brand>Files</Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                <Form inline>\n                    <FileUpload upload={this.handleUpload} ></FileUpload>\n                </Form>\n                </Navbar.Collapse>   \n            </Navbar>\n            <Modal show={this.state.show} onHide={this.handleClose} centered>\n                <Modal.Header>\n                <Modal.Title>Upload File</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <ButtonGroup>\n                <Button variant=\"primary\" onClick={this.handleClose}>\n                    Upload\n                </Button>\n                <Button variant=\"danger\" onClick={this.handleClose}>\n                    Cancel\n                </Button>\n                </ButtonGroup>\n                </Modal.Footer>\n            </Modal>\n            <Row className=\"text-center\">\n                <Col>\n                    <h5>Name</h5>\n                </Col>\n                <Col>\n                    <h5>Size</h5>\n                </Col>\n                <Col>\n                    <h5>Type</h5>\n                </Col>\n                <Col>\n                    <h5>Date</h5>\n                </Col>\n                <Col>\n                    <h5>Actions</h5>\n                </Col>\n            </Row>\n\n            <hr/>\n                <div>\n                {listFiles}\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    files: state.files.files,\n    error: state.files.error,\n    loggedIn: state.user.loggedIn,\n    token: state.user.token\n  });\n  \n  export default connect(mapStateToProps, {fetchFiles, deleteFile, userLogout, emptyFile, createFile})(File);","import {FETCH_IMAGES, NEW_IMAGE, DELETE_IMAGE, IMAGE_ERROR, EMPTY_IMAGE} from './types'\nimport axios from 'axios'\n\nexport const fetchImages = (token) => {\n    return async dispatch => {\n        try{\n            const res = await axios.get('http://localhost:5000/images',{\n            headers:{\n                Authorization:`Bearer ${token}`\n            }\n            })\n            dispatch({\n                type:FETCH_IMAGES,\n                payload: res.data.images\n            })\n        }\n        catch(error){\n            dispatch({\n                type: IMAGE_ERROR,\n            })\n    }}\n}\n    \nexport const createImage = (token,images) => {\n    return async dispatch => {\n        try{\n            const res = await axios.post('http://localhost:5000/images',images, \n            {headers: {'Content-Type': 'multipart/form-data' , Authorization: `Bearer ${token}`}})\n            dispatch({\n                type:NEW_IMAGE,\n                payload: res.data.images\n            })\n        }catch(error){\n            dispatch({\n                type:IMAGE_ERROR,\n                payload:error\n            })\n        }\n}\n}\n        \nexport const deleteImage = (token,id) => {\n    return async dispatch => {\n        try{\n            await axios.delete(`http://localhost:5000/images/${id}`,{\n                headers:{\n                    Authorization: `Bearer ${token}`\n                }\n            })\n                dispatch({\n                    type: DELETE_IMAGE,\n                    payload: id\n                })\n        }catch(error){\n            dispatch({\n                type:IMAGE_ERROR,\n                payload:error\n            })\n        }\n    }\n}\n    \nexport const emptyImage = () => dispatch => {\n    dispatch({\n        type:EMPTY_IMAGE\n    })\n}","import React from 'react'\nimport {Card,Button, ButtonGroup, OverlayTrigger, Popover} from 'react-bootstrap'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nconst Images = (props) => {\n    const height = {\n        minHeight:'200px'\n    }\n    AOS.init({\n        duration:1000\n    })\n    const type = props.image.type.slice(props.image.type.indexOf('/') + 1, props.image.type.length)\n\n    const popover = (\n        <Popover id=\"popover-basic\">\n    <Popover.Title as=\"h3\">Info</Popover.Title>\n    <Popover.Content>\n            <p>Size: {(props.image.size/ 1000000).toFixed(2) + ' mb'}</p>\n            <p>Type: {type.toUpperCase()}</p>\n            <p>Date:  {new Date(props.image.createdAt).toDateString()}</p>\n    </Popover.Content>\n  </Popover>\n    )\n    return(\n        <OverlayTrigger trigger='hover' placement='bottom' overlay={popover}>\n        <Card className='my-5 mx-3' data-aos=\"zoom-in\" style={{'minHeight':'400px'}}>\n            <Card.Img src={`http://localhost:5000/${props.image.location}`} style={height} >\n            </Card.Img>\n            <Card.Header>{props.image.name}</Card.Header>\n            <Card.Body>\n                <Card.Text>\n                </Card.Text>\n                <ButtonGroup>\n                    <Button variant='outline-success'onClick = {() => { props.download(props.image._id,props.image.name)}}><i className=\"material-icons\" >arrow_downward</i></Button>\n                    <Button variant='outline-danger' onClick = {() => {props.delete(props.image._id, props.image.name)}}><i className=\"material-icons\">delete</i></Button>\n                </ButtonGroup>\n            </Card.Body> \n        </Card>\n        </OverlayTrigger>\n    )\n\n}\n\nexport default Images","import React from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport {ListGroup, Modal, Button, ButtonGroup} from 'react-bootstrap'\n\nconst ImageUpload = (props) => {\n    let {acceptedFiles, rejectedFiles, getRootProps, getInputProps} = useDropzone({\n        accept: 'image/* , video/*',\n        multiple: true\n    })\n    const [show,setShow] = React.useState(false)\n\n    const uploadFiles = async (accept) => {\n        let formData = new FormData()\n        accept.forEach(file => {\n            formData.append('images',file)\n        })\n        props.upload(formData)\n        acceptedFiles.length = 0\n        rejectedFiles.length = 0\n        setShow(false)\n\n    }\n\n    const handleShow = () => {\n        setShow(true)\n    }\n\n    const handleClose = async (accept,reject) => {\n       acceptedFiles.length = 0\n       rejectedFiles.length = 0\n        setShow(false)\n    }\n\n\n    const acceptedFilesItems = acceptedFiles.map(file => {\n        return(\n            <ListGroup.Item variant='primary' key={file.name}>\n                {file.name} Accepted\n            </ListGroup.Item>\n        )\n    })\n\n    const rejectedFilesItems = rejectedFiles.map(file => {\n        return(\n            <ListGroup.Item variant='danger' key={file.name}>\n                {file.name} Rejected\n            </ListGroup.Item>\n        )\n    })\n    const drop = {\n        height: '200px',\n        border:'4px dashed lightblue',\n        borderRadius: '25px'\n    }   \n    const corners = {  \n        borderRadius: '25px'\n    }\n    const icon = {\n        fontSize: '100px',\n        marginLeft: '175px',\n        marginTop: '45px'\n    }\n    return(\n        <div>\n        <Button variant='outline-light' style={corners} onClick={handleShow}>Upload</Button>\n        <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header>\n                <h2>Upload</h2>\n            </Modal.Header>\n            <Modal.Body>\n        <section>\n            <div>\n            <div {...getRootProps({className: 'dropzone'})} style={drop}>\n                <input {...getInputProps()} />\n                <i className=\"material-icons\" style={icon}>\n                    cloud_upload\n                    </i>\n            </div>\n            <div className='my-1'>\n                <ListGroup> \n                    {acceptedFilesItems}\n                </ListGroup>\n            </div>\n            <div>\n                <ListGroup className='my-1'>\n                    {rejectedFilesItems}\n                </ListGroup>\n            </div>\n            </div>\n        </section>\n        </Modal.Body>\n        <Modal.Footer>\n            <ButtonGroup>\n                <Button variant='primary' onClick={() => {uploadFiles(acceptedFiles,rejectedFiles)}}>Upload</Button><Button variant='danger' onClick={() => {handleClose(acceptedFiles,rejectedFiles)}}>Cancel</Button>\n            </ButtonGroup>\n        </Modal.Footer>\n        </Modal>\n        </div>\n    )\n}\n\nexport default ImageUpload","import React, {Component} from 'react'\nimport {emptyImage,fetchImages,createImage,deleteImage} from '../actions/imageActions'\nimport {userLogout} from '../actions/userAction'\nimport Images from '../layout/Images'\nimport download from 'downloadjs'\nimport ImageUpload from './ImageUpload'\nimport { connect } from 'react-redux';\nimport {Navbar, Form, Col, Row} from 'react-bootstrap'\n\nclass Image extends Component{\n    componentWillMount(){\n        if(this.props.loggedIn){\n             this.props.fetchImages(this.props.token)\n             if(this.props.error){\n                 this.props.emptyImage()\n                 this.props.userLogout()\n                 this.props.history.push('/')\n             }\n        }\n        else{\n            this.props.history.push('/')\n        }\n     }\n    handleDownload = async(id,name) => {\n        try{\n            const res = await fetch(`http://localhost:5000/images/${id}`,{\n            headers:{\n                Authorization: `Bearer ${this.props.token}`\n            }        \n        })\n        const blob = res.blob()\n        download(blob, name)\n        }\n        catch(err){\n            console.log(err)\n        }\n        \n    }\n    handleUpload = async(images) => {\n        try{\n            await this.props.createImage(this.props.token, images)\n        }\n        catch(err){\n\n        }\n    }\n    handleDelete = async(id,name) => {\n        try{\n            let confirm = window.confirm('Do you want to delete this file: ',{name})\n            if(confirm){\n                this.props.deleteImage(this.props.token,id)\n            }\n\n        }catch(err){\n            console.log(err)\n        }  \n    }  \n    render(){\n        let listImages = []\n        if(!this.props.error){\n            listImages = this.props.images.map(image => {\n                return(\n                    <Col xs={12} md={6} xl={4}>\n                    <Images image={image} key={image._id} download={this.handleDownload} delete={this.handleDelete}></Images>\n                    </Col>\n                )\n            })\n        }\n        const corners = {\n            borderRadius: '25px'\n        }\n        return(\n            <div>\n            <Navbar bg=\"primary\" variant=\"dark\" className='my-5' style={corners}>\n                <Navbar.Brand>Images</Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                <Form inline>\n                <ImageUpload upload={this.handleUpload}></ImageUpload>\n                </Form>\n                </Navbar.Collapse>   \n            </Navbar>\n\n            <Row>\n            {listImages}\n            </Row> \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    images: state.images.images,\n    error: state.images.error,\n    loggedIn: state.user.loggedIn,\n    token: state.user.token\n  });\n  \n  export default connect(mapStateToProps, {fetchImages, deleteImage,userLogout, emptyImage, createImage})(Image);","import React, {Component} from 'react'\n\nclass Error extends Component{\n    render(){\n        const style = {\n            marginTop: '25%',\n            marginLeft: '25%',\n            marginRight: '25%',\n        }\n        return(\n            <div style={style} className='text-center'>\n            <h1 style={{fontSize:100}}>404</h1>\n            </div>\n        )\n    }\n}\n\nexport default Error","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router'\nimport {userLogout} from '../actions/userAction'\nimport {emptyFile} from '../actions/fileActions'\nimport {emptyImage} from '../actions/imageActions'\nimport {Nav,Button,Navbar,Image, OverlayTrigger,Popover} from 'react-bootstrap'\n\nclass Navigation extends Component{\n    constructor(props){\n      super(props);\n      this.handleClick = this.handleClick.bind(this)\n    }\n\n    async handleClick(){\n        let confirm = window.confirm('Are you sure you want to log out?')\n        if(confirm){\n          await this.props.emptyFile()\n          await this.props.emptyImage()\n          this.props.userLogout()\n          this.props.history.push('/')\n        }\n    }\n\n    \n    render(){\n      const style = {\n        width: '60px',\n        height:'auto'\n      }\n      \n      const links = this.props.user.loggedIn ? (<Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/files\">Files</Nav.Link>\n        <Nav.Link href=\"/images\">Images</Nav.Link>\n      </Nav>\n      <OverlayTrigger trigger='click' placement='bottom' overlay={\n        <Popover>\n        <Popover.Title as=\"h3\">Signed In As {this.props.user.username}</Popover.Title>\n        <Popover.Content>\n          <Button variant=\"outline-primary\" block onClick={this.handleClick}>Sign Out</Button>\n        </Popover.Content>\n      </Popover>\n      }>\n      <Image src={this.props.user.pic} rounded style={style}/>\n      </OverlayTrigger>\n    </Navbar.Collapse>):(<div/>)\n      \n      const toggle = this.props.user.loggedIn ? (<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />):(<div/>) \n      const icon = {\n        fontSize: '40px'\n      }\n      return(\n        <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\"><i className=\"material-icons\" style={icon}>cloud_queue</i></Navbar.Brand>\n        <Nav.Link href='/about'>About</Nav.Link>\n          {toggle}\n          {links}\n      </Navbar>\n      )\n    }\n  }\nconst mapStateProps = state => ({\n  user: state.user\n})\n\n\nexport default withRouter(connect(mapStateProps, {userLogout, emptyFile, emptyImage})(Navigation))\n","import React, {Component} from 'react'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css'\n\nclass Error extends Component{\n    render(){\n        AOS.init({\n            duration:1000\n        })\n        const style = {\n            marginTop:'75px'\n        }\n        return(\n            <div style={style} data-aos='zoom-in'>\n                <h1>About this Application</h1>\n                <hr/>\n                <h4 className='my-2'>This is a cloud platform application that allows a user to to upload and download files and images</h4>\n                <h2 className='mt-5'>Frontend</h2>\n                <hr/>\n                <h4>The frontend of this application i built using <b>React</b> as the framework and <b>Redux</b> as the state management tool</h4>\n                <h2 className='mt-5'>Backend</h2>\n                <hr/>\n                <h4>The backend of this application i built using <b>Node js</b> to build a secure <b>REST API</b> with <b>Json Web Tokens</b> and <b>Mongo DB</b> as my database</h4>\n                <h2 className='mt-5'>Git Links</h2>\n                <hr/>\n                <h5><a href='https://gitlab.com/ismael101/cloud-platform-frontend'>Frontend</a></h5>\n                <h5><a href='https://gitlab.com/ismael101/cloud-platform-backend'>Backend</a></h5>\n            </div>\n        )\n    }\n}\n\nexport default Error ","const initialState = {\n    files:[],\n    error:false\n}\n\nexport default function(state = initialState, action){\n    switch (action.type){\n        case 'FETCH_FILES':\n            return {\n                files: action.payload,\n                error:false\n            };\n        case 'NEW_FILE':\n            return {\n                files: [...state.files, ...action.payload]\n        };\n        case 'DELETE_FILE':\n            let newFiles = state.files.filter(file => file._id !== action.payload) \n            return {\n                files:newFiles\n            }\n        case 'FILE_ERROR':\n            return{\n                error:true  \n            }\n        case 'EMPTY_FILE':\n            return{\n                files: []\n            }\n        default:\n            return state;\n    }\n}","const initialState = {\n    images:[],\n    error:false\n}\n\nexport default function(state = initialState, action){\n    switch (action.type){\n        case 'FETCH_IMAGES':\n            return {\n                images:action.payload,\n                error:false\n            };\n        case 'NEW_IMAGE':\n            return {\n                ...state,\n                images: [...state.images, ...action.payload]\n        };\n        case 'DELETE_IMAGE':\n                let newImages = state.images.filter(image => image._id !== action.payload) \n                return {\n                    images:newImages\n                }\n        case 'IMAGE_ERROR':\n            return{\n                error:true\n            }\n        case 'EMPTY_IMAGE':\n            return{\n                images: []\n            }\n        default:\n            return state;\n    }\n}","import {USER_LOGIN,USER_ERROR,USER_LOGOUT} from '../actions/types'\nconst initialState = {\n    username:'',\n    token:'',\n    pic:'',\n    loggedIn:'',\n    error:false\n}\n\nexport default function(state = initialState, action){\n    switch (action.type) {\n        case USER_LOGIN:\n          return {\n            username: action.payload.username,\n            token: action.payload.token,\n            pic: action.payload.pic,\n            loggedIn:true,\n            error:false\n          };\n        case USER_LOGOUT:\n          return{\n            username: '',\n            token: '',\n            pic: '',\n            loggedIn: false,\n            error: false\n          }\n        case USER_ERROR:\n          return {\n            error: true\n          };\n        default:\n          return state;\n      }\n}","import {combineReducers} from 'redux'\nimport files from './files'\nimport images from './images'\nimport user from './user'\n\nexport default combineReducers({\n    files: files,\n    images:images,\n    user: user\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default () => {\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n  return {store, persistor: persistStore(store)}  \n}","import React,{Component} from 'react'\nimport {Form, Button, Alert} from 'react-bootstrap'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport {connect} from 'react-redux'\nimport {userLogin} from '../actions/userAction'\n\nclass SignIn extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n        username: '',\n        password: '',\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    async onSubmit(e){\n            console.log('button clicked')\n            e.preventDefault()\n            const signup = {\n                username:this.state.username,\n                password:this.state.password\n            }\n            try{\n                await this.props.userLogin(signup)\n                if(this.props.error){\n                    this.setState({\n                        username:'',\n                        password:''\n                    })\n               }\n               else{\n                this.props.history.push('/files')      \n                }\n            } catch(err){\n\n            }\n    }\n    componentWillMount(){\n        if(this.props.loggedIn){\n            this.props.history.push('/files')\n        }\n    }\n\n    render(){\n        const error = this.props.error ? (<Alert variant=\"danger\" className='mt-5'>Authentication Error</Alert>):(<div></div>)\n        AOS.init({\n            duration:1000\n        })\n        const style = {\n            maxWidth: '500px',\n            marginTop: '15%',\n            marginLeft: '25%',\n            marginRight: '25%',\n            textAlign: 'center'\n        }\n        const icon = {\n            fontSize: '200px'\n        }\n        return(\n            <div style={style} data-aos='zoom-in'>\n                <div className='text-center'>\n                <div className='text-center mb-1'>\n                <i className=\"material-icons\" style={icon}>person_outline</i>\n                </div>\n                <Form onSubmit={this.onSubmit}>\n                <Form.Group>\n                    <Form.Control type=\"text\" value={this.state.username} placeholder=\"Enter Username\" name='username'required onChange={(e) => {this.onChange(e)}}/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control type=\"password\" value={this.state.password} placeholder=\"Enter Password\" name='password' required onChange={(e) => {this.onChange(e)}} />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" block>\n                    Submit\n                </Button>\n                </Form>\n                <h5 className='mt-5'>Username: <b>ismael101</b> Password: <b>password101</b></h5>\n                {error}\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateProps = state => ({\n    error: state.user.error,\n    loggedIn: state.user.loggedIn,\n    token: state.user.token\n})\n\nexport default connect(mapStateProps,{userLogin})(SignIn)","import React from 'react';\nimport {BrowserRouter as Router,Route, Switch} from 'react-router-dom'\nimport Files from './components/Files'\nimport Image from './components/Image'\nimport Error from './components/Error'\nimport Navigation from './layout/Navigation'\nimport About from './components/About'\nimport { Container} from 'react-bootstrap';\nimport {Provider} from 'react-redux'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport configStore from './store'\nimport SignIn from './components/SignIn';\nfunction App() {\n\n  const {persistor, store} = configStore()\n\n  return (\n    <div className=\"App\">\n        <Router>\n          <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}> \n          <Navigation/>\n          <Container>\n          <Switch>\n          <Route path='/' exact component = {SignIn}/>\n          <Route path='/files' component = {Files}/>\n          <Route path='/images' component = {Image}/>\n          <Route path='/about' component = {About}/>\n          <Route path='*' component = {Error}/>\n          </Switch>\n          </Container>\n          </PersistGate>\n          </Provider>\n          \n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}